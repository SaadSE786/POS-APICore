// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS_API.Model;

#nullable disable

namespace POS_API.Migrations
{
    [DbContext(typeof(POSEntities))]
    partial class POSEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POS_API.Models.tblCompany", b =>
                {
                    b.Property<int>("intCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intCompanyId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("varCompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("varCompanyLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("varCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intCompanyId");

                    b.ToTable("tblCompanies");
                });

            modelBuilder.Entity("POS_API.Models.tblComponent", b =>
                {
                    b.Property<int>("intComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intComponentId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("tblModuleintModuleId")
                        .HasColumnType("int");

                    b.Property<string>("varComponentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intComponentId");

                    b.HasIndex("tblModuleintModuleId");

                    b.ToTable("tblComponents");
                });

            modelBuilder.Entity("POS_API.Models.tblField", b =>
                {
                    b.Property<int>("intFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intFieldId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("tblComponentintComponentId")
                        .HasColumnType("int");

                    b.Property<string>("varFieldName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intFieldId");

                    b.HasIndex("tblComponentintComponentId");

                    b.ToTable("tblFields");
                });

            modelBuilder.Entity("POS_API.Models.tblItem", b =>
                {
                    b.Property<int>("intItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intItemId"));

                    b.Property<decimal?>("dcDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcDistributorSaleRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcMaxLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcMinLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcOpenStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcOrderLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcPurRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcRetailSaleRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcSellRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isExpirable")
                        .HasColumnType("bit");

                    b.Property<bool?>("isTaxable")
                        .HasColumnType("bit");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("varItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varUom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intItemId");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.ToTable("tblItems");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel1", b =>
                {
                    b.Property<int>("intLevel1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intLevel1Id"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("varLevel1Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intLevel1Id");

                    b.ToTable("tblLevel1");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel2", b =>
                {
                    b.Property<int>("intLevel2Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intLevel2Id"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intLevel1Id")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("tblLevel1intLevel1Id")
                        .HasColumnType("int");

                    b.Property<string>("varLevel2Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intLevel2Id");

                    b.HasIndex("tblLevel1intLevel1Id");

                    b.ToTable("tblLevel2");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel3", b =>
                {
                    b.Property<int>("intLevel3Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intLevel3Id"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intLevel2Id")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("tblLevel2intLevel2Id")
                        .HasColumnType("int");

                    b.Property<string>("varLevel3Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intLevel3Id");

                    b.HasIndex("tblLevel2intLevel2Id");

                    b.ToTable("tblLevel3");
                });

            modelBuilder.Entity("POS_API.Models.tblModule", b =>
                {
                    b.Property<int>("intModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intModuleId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("varModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intModuleId");

                    b.ToTable("tblModules");
                });

            modelBuilder.Entity("POS_API.Models.tblParty", b =>
                {
                    b.Property<int>("intPartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intPartyId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intLevel1Id")
                        .HasColumnType("int");

                    b.Property<int?>("intLevel2Id")
                        .HasColumnType("int");

                    b.Property<int?>("intLevel3Id")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("tblLevel1intLevel1Id")
                        .HasColumnType("int");

                    b.Property<int?>("tblLevel2intLevel2Id")
                        .HasColumnType("int");

                    b.Property<int?>("tblLevel3intLevel3Id")
                        .HasColumnType("int");

                    b.Property<string>("varAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varPartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varPartyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intPartyId");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.HasIndex("tblLevel1intLevel1Id");

                    b.HasIndex("tblLevel2intLevel2Id");

                    b.HasIndex("tblLevel3intLevel3Id");

                    b.ToTable("tblParties");
                });

            modelBuilder.Entity("POS_API.Models.tblPermission", b =>
                {
                    b.Property<int>("intPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intPermissionId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("intModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("intRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("tblComponentintComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("tblFieldintFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("tblModuleintModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("tblRoleintRoleId")
                        .HasColumnType("int");

                    b.HasKey("intPermissionId");

                    b.HasIndex("tblComponentintComponentId");

                    b.HasIndex("tblFieldintFieldId");

                    b.HasIndex("tblModuleintModuleId");

                    b.HasIndex("tblRoleintRoleId");

                    b.ToTable("tblPermissions");
                });

            modelBuilder.Entity("POS_API.Models.tblPledger", b =>
                {
                    b.Property<int>("intPlid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intPlid"));

                    b.Property<decimal?>("dcCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtVrDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intDcno")
                        .HasColumnType("int");

                    b.Property<int?>("intPartyId")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("tblPartyintPartyId")
                        .HasColumnType("int");

                    b.Property<string>("varDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varVrType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intPlid");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.HasIndex("tblPartyintPartyId");

                    b.ToTable("tblPledgers");
                });

            modelBuilder.Entity("POS_API.Models.tblRole", b =>
                {
                    b.Property<int>("intRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intRoleId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("varName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intRoleId");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.ToTable("tblRoles");
                });

            modelBuilder.Entity("POS_API.Models.tblStockDetail", b =>
                {
                    b.Property<int>("intStockDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intStockDetailId"));

                    b.Property<decimal?>("dcAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcDisc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcDiscAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcExclTaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcInclTaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcPurRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcTaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intItemId")
                        .HasColumnType("int");

                    b.Property<int?>("intQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("intStid")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intWarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("tblItemintItemId")
                        .HasColumnType("int");

                    b.Property<int?>("tblStockMainintStid")
                        .HasColumnType("int");

                    b.Property<int?>("tblWarehouseintWarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("varType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intStockDetailId");

                    b.HasIndex("tblItemintItemId");

                    b.HasIndex("tblStockMainintStid");

                    b.HasIndex("tblWarehouseintWarehouseId");

                    b.ToTable("tblStockDetails");
                });

            modelBuilder.Entity("POS_API.Models.tblStockMain", b =>
                {
                    b.Property<int>("intStid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intStid"));

                    b.Property<decimal?>("dcAdditionalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcDiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcNetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dcTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtVrDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intPartyId")
                        .HasColumnType("int");

                    b.Property<int?>("intTransporterId")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intVrno")
                        .HasColumnType("int");

                    b.Property<int?>("intVrnoA")
                        .HasColumnType("int");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("tblPartyintPartyId")
                        .HasColumnType("int");

                    b.Property<int?>("tblTransporterintTransporterId")
                        .HasColumnType("int");

                    b.Property<string>("varRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varVrType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intStid");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.HasIndex("tblPartyintPartyId");

                    b.HasIndex("tblTransporterintTransporterId");

                    b.ToTable("tblStockMains");
                });

            modelBuilder.Entity("POS_API.Models.tblTransporter", b =>
                {
                    b.Property<int>("intTransporterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intTransporterId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("varAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varTransporterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intTransporterId");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.ToTable("tblTransporters");
                });

            modelBuilder.Entity("POS_API.Models.tblUser", b =>
                {
                    b.Property<int>("intUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intUserId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<bool?>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("varAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varCnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("varPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("intUserId");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("POS_API.Models.tblWarehouse", b =>
                {
                    b.Property<int>("intWarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intWarehouseId"));

                    b.Property<DateTime?>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("intCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("intCreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("intUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("tblCompanyintCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("varWarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intWarehouseId");

                    b.HasIndex("tblCompanyintCompanyId");

                    b.ToTable("tblWarehouses");
                });

            modelBuilder.Entity("tblRoletblUser", b =>
                {
                    b.Property<int>("tblRolesintRoleId")
                        .HasColumnType("int");

                    b.Property<int>("tblUsersintUserId")
                        .HasColumnType("int");

                    b.HasKey("tblRolesintRoleId", "tblUsersintUserId");

                    b.HasIndex("tblUsersintUserId");

                    b.ToTable("tblRoletblUser");
                });

            modelBuilder.Entity("POS_API.Models.tblComponent", b =>
                {
                    b.HasOne("POS_API.Models.tblModule", "tblModule")
                        .WithMany("tblComponents")
                        .HasForeignKey("tblModuleintModuleId");

                    b.Navigation("tblModule");
                });

            modelBuilder.Entity("POS_API.Models.tblField", b =>
                {
                    b.HasOne("POS_API.Models.tblComponent", "tblComponent")
                        .WithMany("tblFields")
                        .HasForeignKey("tblComponentintComponentId");

                    b.Navigation("tblComponent");
                });

            modelBuilder.Entity("POS_API.Models.tblItem", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblItems")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.Navigation("tblCompany");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel2", b =>
                {
                    b.HasOne("POS_API.Models.tblLevel1", "tblLevel1")
                        .WithMany("tblLevel2")
                        .HasForeignKey("tblLevel1intLevel1Id");

                    b.Navigation("tblLevel1");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel3", b =>
                {
                    b.HasOne("POS_API.Models.tblLevel2", "tblLevel2")
                        .WithMany("tblLevel3")
                        .HasForeignKey("tblLevel2intLevel2Id");

                    b.Navigation("tblLevel2");
                });

            modelBuilder.Entity("POS_API.Models.tblParty", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblParties")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.HasOne("POS_API.Models.tblLevel1", "tblLevel1")
                        .WithMany("tblParties")
                        .HasForeignKey("tblLevel1intLevel1Id");

                    b.HasOne("POS_API.Models.tblLevel2", "tblLevel2")
                        .WithMany("tblParties")
                        .HasForeignKey("tblLevel2intLevel2Id");

                    b.HasOne("POS_API.Models.tblLevel3", "tblLevel3")
                        .WithMany("tblParties")
                        .HasForeignKey("tblLevel3intLevel3Id");

                    b.Navigation("tblCompany");

                    b.Navigation("tblLevel1");

                    b.Navigation("tblLevel2");

                    b.Navigation("tblLevel3");
                });

            modelBuilder.Entity("POS_API.Models.tblPermission", b =>
                {
                    b.HasOne("POS_API.Models.tblComponent", "tblComponent")
                        .WithMany("tblPermissions")
                        .HasForeignKey("tblComponentintComponentId");

                    b.HasOne("POS_API.Models.tblField", "tblField")
                        .WithMany("tblPermissions")
                        .HasForeignKey("tblFieldintFieldId");

                    b.HasOne("POS_API.Models.tblModule", "tblModule")
                        .WithMany("tblPermissions")
                        .HasForeignKey("tblModuleintModuleId");

                    b.HasOne("POS_API.Models.tblRole", "tblRole")
                        .WithMany("tblPermissions")
                        .HasForeignKey("tblRoleintRoleId");

                    b.Navigation("tblComponent");

                    b.Navigation("tblField");

                    b.Navigation("tblModule");

                    b.Navigation("tblRole");
                });

            modelBuilder.Entity("POS_API.Models.tblPledger", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblPledgers")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.HasOne("POS_API.Models.tblParty", "tblParty")
                        .WithMany("tblPledgers")
                        .HasForeignKey("tblPartyintPartyId");

                    b.Navigation("tblCompany");

                    b.Navigation("tblParty");
                });

            modelBuilder.Entity("POS_API.Models.tblRole", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblRoles")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.Navigation("tblCompany");
                });

            modelBuilder.Entity("POS_API.Models.tblStockDetail", b =>
                {
                    b.HasOne("POS_API.Models.tblItem", "tblItem")
                        .WithMany("tblStockDetails")
                        .HasForeignKey("tblItemintItemId");

                    b.HasOne("POS_API.Models.tblStockMain", "tblStockMain")
                        .WithMany("tblStockDetails")
                        .HasForeignKey("tblStockMainintStid");

                    b.HasOne("POS_API.Models.tblWarehouse", "tblWarehouse")
                        .WithMany("tblStockDetails")
                        .HasForeignKey("tblWarehouseintWarehouseId");

                    b.Navigation("tblItem");

                    b.Navigation("tblStockMain");

                    b.Navigation("tblWarehouse");
                });

            modelBuilder.Entity("POS_API.Models.tblStockMain", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblStockMains")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.HasOne("POS_API.Models.tblParty", "tblParty")
                        .WithMany("tblStockMains")
                        .HasForeignKey("tblPartyintPartyId");

                    b.HasOne("POS_API.Models.tblTransporter", "tblTransporter")
                        .WithMany("tblStockMains")
                        .HasForeignKey("tblTransporterintTransporterId");

                    b.Navigation("tblCompany");

                    b.Navigation("tblParty");

                    b.Navigation("tblTransporter");
                });

            modelBuilder.Entity("POS_API.Models.tblTransporter", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblTransporters")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.Navigation("tblCompany");
                });

            modelBuilder.Entity("POS_API.Models.tblUser", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblUsers")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.Navigation("tblCompany");
                });

            modelBuilder.Entity("POS_API.Models.tblWarehouse", b =>
                {
                    b.HasOne("POS_API.Models.tblCompany", "tblCompany")
                        .WithMany("tblWarehouses")
                        .HasForeignKey("tblCompanyintCompanyId");

                    b.Navigation("tblCompany");
                });

            modelBuilder.Entity("tblRoletblUser", b =>
                {
                    b.HasOne("POS_API.Models.tblRole", null)
                        .WithMany()
                        .HasForeignKey("tblRolesintRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POS_API.Models.tblUser", null)
                        .WithMany()
                        .HasForeignKey("tblUsersintUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POS_API.Models.tblCompany", b =>
                {
                    b.Navigation("tblItems");

                    b.Navigation("tblParties");

                    b.Navigation("tblPledgers");

                    b.Navigation("tblRoles");

                    b.Navigation("tblStockMains");

                    b.Navigation("tblTransporters");

                    b.Navigation("tblUsers");

                    b.Navigation("tblWarehouses");
                });

            modelBuilder.Entity("POS_API.Models.tblComponent", b =>
                {
                    b.Navigation("tblFields");

                    b.Navigation("tblPermissions");
                });

            modelBuilder.Entity("POS_API.Models.tblField", b =>
                {
                    b.Navigation("tblPermissions");
                });

            modelBuilder.Entity("POS_API.Models.tblItem", b =>
                {
                    b.Navigation("tblStockDetails");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel1", b =>
                {
                    b.Navigation("tblLevel2");

                    b.Navigation("tblParties");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel2", b =>
                {
                    b.Navigation("tblLevel3");

                    b.Navigation("tblParties");
                });

            modelBuilder.Entity("POS_API.Models.tblLevel3", b =>
                {
                    b.Navigation("tblParties");
                });

            modelBuilder.Entity("POS_API.Models.tblModule", b =>
                {
                    b.Navigation("tblComponents");

                    b.Navigation("tblPermissions");
                });

            modelBuilder.Entity("POS_API.Models.tblParty", b =>
                {
                    b.Navigation("tblPledgers");

                    b.Navigation("tblStockMains");
                });

            modelBuilder.Entity("POS_API.Models.tblRole", b =>
                {
                    b.Navigation("tblPermissions");
                });

            modelBuilder.Entity("POS_API.Models.tblStockMain", b =>
                {
                    b.Navigation("tblStockDetails");
                });

            modelBuilder.Entity("POS_API.Models.tblTransporter", b =>
                {
                    b.Navigation("tblStockMains");
                });

            modelBuilder.Entity("POS_API.Models.tblWarehouse", b =>
                {
                    b.Navigation("tblStockDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
